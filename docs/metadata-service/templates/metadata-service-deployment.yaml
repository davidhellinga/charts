apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose-cloud.yml -o kweeter
    kompose.version: 1.28.0 (c4137012e)
  labels:
    io.kompose.service: {{ .Values.serviceName }}
  name: {{ .Values.serviceName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: {{ .Values.serviceName }}
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose-cloud.yml -o kweeter
        kompose.version: 1.28.0 (c4137012e)
      labels:
        
        io.kompose.service: {{ .Values.serviceName }}
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.environment }}
            - name: DATABASE
              value: {{ .Values.serviceName }}
            - name: RABBITMQ_HOST
              value: {{ .Values.rabbitmq.host }}
            - name: ROOT_CERT
              value: /cert/root.crt
            - name: YUGA
              value: {{ .Values.yugabyte.useYugabyte | quote }}
            - name: CONNECTION_STRING
              value: "Server={{ .Values.serviceName }}-db;Database={{ .Values.serviceName }};Username=postgres;Password=postgres;"
            - name: YUGABYTE_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ .Values.serviceName }}-yugabyte
            - name: YUGABYTE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.serviceName }}-yugabyte
            - name: YUGABYTE_USER
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.serviceName }}-yugabyte
          image: fontyssa/kwetter-metadata-service
          name: {{ .Values.serviceName }}
          resources: {}
      restartPolicy: Always
